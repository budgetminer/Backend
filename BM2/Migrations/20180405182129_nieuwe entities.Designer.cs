// <auto-generated />
using BM2.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace BM2.Migrations
{
    [DbContext(typeof(EntityContext))]
    [Migration("20180405182129_nieuwe entities")]
    partial class nieuweentities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BM2.DataAccess.Entities.Coty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("abbrev")
                        .IsRequired();

                    b.Property<string>("descr")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cotys");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Cu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Cus");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("cuName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.HeadCount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<string>("HcFtecost");

                    b.Property<int?>("LevelId");

                    b.Property<int?>("TeamId");

                    b.Property<string>("hcBudgetowner");

                    b.Property<string>("hcFteextern");

                    b.Property<string>("hcFtegr");

                    b.Property<string>("hcNofte");

                    b.Property<string>("hcYear")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LevelId");

                    b.HasIndex("TeamId");

                    b.ToTable("Headcounts");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<int?>("TeamId");

                    b.Property<string>("lvBudgetowner");

                    b.Property<string>("lvGrade");

                    b.Property<string>("lvName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("TeamId");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Li", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("budown");

                    b.Property<string>("critical");

                    b.Property<int?>("cuId");

                    b.Property<string>("descr");

                    b.Property<int?>("lityId");

                    b.Property<string>("name")
                        .IsRequired();

                    b.Property<string>("prodyr");

                    b.Property<decimal>("usrcnt");

                    b.Property<string>("version");

                    b.HasKey("Id");

                    b.HasIndex("cuId");

                    b.HasIndex("lityId");

                    b.ToTable("Lis");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Lico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("cotyId");

                    b.Property<int?>("liId");

                    b.Property<decimal>("licco");

                    b.Property<decimal>("maintco");

                    b.Property<decimal>("yr");

                    b.HasKey("Id");

                    b.HasIndex("cotyId");

                    b.HasIndex("liId");

                    b.ToTable("Licos");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Lity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("abbrev");

                    b.Property<string>("type");

                    b.HasKey("Id");

                    b.ToTable("Litys");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<string>("tmBudgetowner");

                    b.Property<string>("tmLocation");

                    b.Property<string>("tmMission");

                    b.Property<string>("tmName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.HeadCount", b =>
                {
                    b.HasOne("BM2.DataAccess.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("BM2.DataAccess.Entities.Level", "Level")
                        .WithMany()
                        .HasForeignKey("LevelId");

                    b.HasOne("BM2.DataAccess.Entities.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Level", b =>
                {
                    b.HasOne("BM2.DataAccess.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.HasOne("BM2.DataAccess.Entities.Team", "Team")
                        .WithMany("Levels")
                        .HasForeignKey("TeamId");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Li", b =>
                {
                    b.HasOne("BM2.DataAccess.Entities.Cu", "cu")
                        .WithMany()
                        .HasForeignKey("cuId");

                    b.HasOne("BM2.DataAccess.Entities.Lity", "lity")
                        .WithMany()
                        .HasForeignKey("lityId");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Lico", b =>
                {
                    b.HasOne("BM2.DataAccess.Entities.Coty", "coty")
                        .WithMany()
                        .HasForeignKey("cotyId");

                    b.HasOne("BM2.DataAccess.Entities.Li", "li")
                        .WithMany()
                        .HasForeignKey("liId");
                });

            modelBuilder.Entity("BM2.DataAccess.Entities.Team", b =>
                {
                    b.HasOne("BM2.DataAccess.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
